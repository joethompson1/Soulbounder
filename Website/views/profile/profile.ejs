<head>
	<!-- Stylesheets -->
	<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
	<link rel="stylesheet" href="/stylesheets/profileStyles/profile.css">
	<link rel="stylesheet" href="/stylesheets/connectWalletStyles/connectWalletButton.css">
	<!-- <link rel="stylesheet" href="/stylesheets/viewSBT.css"> -->

	<script src="https://cdn.ethers.io/lib/ethers-5.2.umd.min.js" type="application/javascript"></script>
	<script src="/javascript/walletButton.js"></script>
	<script src="/javascript/profile/profile.js"></script>
	<script src="/javascript/profile/viewAccountSBT.js"></script>
</head>

<body>
	<div class="container__body">
		<div class="container__connectWallet" id="container__connectWallet">
			<div class="container__statusLight" id="container__statusLight">
			</div>
			<p class="text__status" id="text__status">Wallet not connected</p>
		</div>

		<div class="noAuthFoundOuter">
			<div class="noAuthFound__container" id="noAuthFound">
				<h1>Oops.</h1>
				<h3>It doesn't look like you have an auth token.</h3>
				<button class="createAuthTokenButton" id="gettingStartedButton">Create!</button>
			</div>
		</div>

		<div class="container__mainContents">
			<div class="container__left" id='container__left'>

			</div>
			<div class="container__right" id='container__right'>

			</div>
		</div>
	</div>


	<script type="text/javascript">
		let connectionText, statusLight;
		let userWalletAddress = localStorage.getItem('userWalletAddress');
		let encryptedAttributes = [];
		let contractAbi = '<%- contractAbi %>';
		const contractAddress = "<%= contractAddress %>";
		const noAuthFound = document.getElementById('noAuthFound');


		$(async function() { // execute once the DOM has loaded
			clearAuthContainers();
			userWalletAddress = localStorage.getItem('userWalletAddress');

			if (userWalletAddress) {
				setWalletToConnected();

				let authToken;

				try {
				    // Make a GET request to the getAuthToken API endpoint
				    const response = await fetch(`/api/getAuthToken/${userWalletAddress}`);
				    const data = await response.json();
				    authToken = data.authToken;

				} catch (error) {
				    // Handle any errors
				    console.error('Error with getAuthToken API:', error);
				}
				
				if (authToken.tokenURI && authToken.SBTData) {
					hasAuthToken = true;
					for (let i = 1; i < authToken.SBTData.attributes.length; i++) {
						encryptedAttributes.push(authToken.SBTData.attributes[i].value);
					}
					viewAccountSBT(authToken);
				} 

				else {
					noAuthFound.style.display = "block";
					console.error("No Auth token found in wallet.");
				}
			
			} 
		});


		document.getElementById("gettingStartedButton").addEventListener("click", function() {
   			window.location.href = "/createSBT";
	  	});



		$("#container__connectWallet").click(async function(event) {
			noAuthFound.style.display = "none";
			clearAuthContainers();
			userWalletAddress = await setUserWallet();
			setWalletToConnected();

			let authToken;

			try {
			    // Make a GET request to the getAuthToken API endpoint
			    const response = await fetch(`/api/getAuthToken/${userWalletAddress}`);
			    const data = await response.json();
			    authToken = data.authToken;

			} catch (error) {
			    // Handle any errors
			    console.error('Error with getAuthToken API:', error);
			}
			
			if (authToken.tokenURI && authToken.SBTData) {
				for (let i = 1; i < authToken.SBTData.attributes.length; i++) {
					encryptedAttributes.push(authToken.SBTData.attributes[i].value);
				}
				viewAccountSBT(authToken);
			} 

			else {
				noAuthFound.style.display = "block";
				console.error("No Auth token found in wallet.");
			}
		});



		// When the user hovers over container__connectWallet
		$("#container__connectWallet").hover(
		    // If the wallet is not connected, show "Connect Wallet" text and change the status light
		    function() {
		        entersWalletConnect(connectionText);
		    },
		    // When the user stops hovering over the container, show the original text and status light
		    function() {
		        leavesWalletConnect(connectionText, statusLight);
		    }
		);


	</script>

</body>






