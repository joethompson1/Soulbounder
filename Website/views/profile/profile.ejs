<head>
	<!-- Stylesheets -->
	<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
	<link rel="stylesheet" href="/stylesheets/profileStyles/profile.css">
	<link rel="stylesheet" href="/stylesheets/viewSBT.css">

	<script src="https://cdn.ethers.io/lib/ethers-5.2.umd.min.js" type="application/javascript"></script>
</head>

<body>
	<div class="container__body">
		<div class="container__connectWallet" id="container__connectWallet">
			<div class="container__statusLight" id="container__statusLight">
			</div>
			<p class="text__status" id="text__status">Wallet not connected</p>
		</div>


		<div class="container__mainContents">
			<div class="container__left">
				<div class="container__image">
					<img class="ethereumIcon" src="/images/ethereum.svg">
					<img class="imageSBT" id="imageSBT" src="">
				</div>
			</div>
			<div class="container__right">
				<div class="container__sbtContentsMain">
					<h5 class="SBTOwner" id="SBTOwner"></h5>
					<h1 class="SBTName" id="SBTName">Joe Thompson</h1>
					<div class="container__SBTType">
						<h5 class="type">Type: </h5>
						<h5 class="SBTType" id="SBTType"></h5>
					</div>
					<!-- <div class="container__hoverButton">					 -->
						<div class="container__createButton" id="submitButton">
							<img class="sendIcon" src="/images/share.svg">
							<div class="container__createButtonBubble">
								<div class="pointer"></div>
								<h5>Share</h5>
							</div>
						</div>
					<!-- </div> -->
				</div>

				<div class="container__attribute" id="description">
					<div class="container__description-title">
						<img class="descriptionIcon" src="/images/description.svg">
						<h2 class="descriptionTitle">Description</h2>
					</div>
					<div class="container__description-contents">
						<p class="descriptionContents" id="descriptionContents"></p>
					</div>
				</div>
			</div>
		</div>


		<div class="container__profile-library">
			<div class="container__profile-libraryColumns">
				<div class="container__profile-libraryColumn active" id="attendance" onclick="changeTab('attendance')">
					<h2 class="sectionTitle">Attendance</h2>
				</div>
				<div class="container__profile-libraryColumn" id="certificate" onclick="changeTab('certificate')">
					<h2 class="sectionTitle">Certificates</h2>
				</div>
				<div class="container__profile-libraryColumn" id="ticket" onclick="changeTab('ticket')">
					<h2 class="sectionTitle">Tickets</h2>
				</div>
			</div>
			<div class="container__profile-viewSBTs" id="container__profile-viewSBTs">

			</div>
		</div>
	</div>



	<script type="text/javascript">
		function changeTab(tabId) {
			let tabs = ['attendance', 'certificate', 'ticket'];

			for (var i = 0; i < tabs.length; i++ ) {
				let tab = document.getElementById(tabs[i]);
				if (tab.classList.contains('active')) {
					tab.classList.remove('active');
				}
			}

			let chosenTab = document.getElementById(tabId);
			chosenTab.classList.add("active");
			window.location.hash = capitalizeFirstLetter(tabId);

			let tabContents = document.getElementById('container__profile-viewSBTs');
			let color = window.getComputedStyle(chosenTab).backgroundColor;
			tabContents.style.backgroundColor = color;
			loadSBTData();
		}


		function capitalizeFirstLetter(str) {
			// converting first letter to uppercase
			const capitalized = str.charAt(0).toUpperCase() + str.slice(1);

			return capitalized;
		}




		let connectionText = document.getElementById("text__status").innerHTML;
		let statusLight = document.getElementById('container__statusLight').style.background;

		$("#container__connectWallet").click(async function(event) {
			const accounts = await ethereum.request({ method: 'eth_requestAccounts' });
			const userWalletAddress = accounts[0];
			localStorage.setItem('userWalletAddress', userWalletAddress);
			await loadSBTData(window.location.hash);	
		});




		$(async function() { // execute once the DOM has loaded
			let sbtType;
			if (window.location.hash == "Attendance" || window.location.hash == "Certificate" || window.location.hash == "Ticket"  ) {
				// sbtType = window.location.hash
			} else {
				sbtType = "Attendance"
				window.location.hash = sbtType;
			}
			await loadSBTData();
		});


		async function loadSBTData() {
			var userWalletAddress = localStorage.getItem('userWalletAddress');
			let sbtType = window.location.hash;

			if (userWalletAddress) {
				const textStatus = document.querySelector('.text__status');
				textStatus.innerHTML = "Wallet connected";
				connectionText = textStatus.innerHTML;
				document.getElementById('container__statusLight').style.background = "lightgreen";
				statusLight = "lightgreen";

				const provider = new ethers.providers.Web3Provider(window.ethereum);
				const signer = provider.getSigner(userWalletAddress);

				const networkId = await window.ethereum.request({ method: 'net_version' });
				const contractNetworkId = "<%= contractNetworkId %>"

				const userAccount = document.getElementById("userAccount");

				let contractAbi = '<%- contractAbi %>';
				const contractAddress = "<%= contractAddress %>";

				const contract = new ethers.Contract(contractAddress, contractAbi, signer);


				walletBalance = await contract.balanceOf(userWalletAddress);
				console.log("walletBalance", walletBalance);

				const sbtContainer = document.getElementById("container__profile-viewSBTs");
				sbtContainer.innerHTML = "";

				// Runs through all the users tokens
				for (var i=0; i < walletBalance.toString(); i++) {
					const tokenId = await contract.tokenOfOwnerByIndex(userWalletAddress, i);
					console.log("tokenId: ", tokenId);

					let tokenURI = await contract.tokenURI(tokenId);
					console.log("tokenURI: ", tokenURI);
					let request = new Request("https://soulbounder.infura-ipfs.io/ipfs/"+tokenURI);
					// let request = new Request("/SBT-data/"+tokenURI);
					let response = await fetch(request);
					let SBTData = await response.json();

					// Checks which SBT should be shown based on selected folder on profile
					if (SBTData.attributes[0].value == sbtType.substring(1)) {
						const container__sbt = document.createElement("a");
						container__sbt.className = 'container__sbt';
						let href = "/profile/viewSBT#"+tokenId;
						container__sbt.setAttribute('href', href);

						var sbtImage = new Image();
						sbtImage.className = 'sbtImage';
						// sbtImage.src = SBTData.image;
						sbtImage.src = "./SBT-image/"+SBTData.path;

						const sbtName = document.createElement("h2");
						sbtName.className = "sbtName";
						sbtName.textContent = SBTData.name;

						container__sbt.appendChild(sbtImage);
						container__sbt.appendChild(sbtName);
						sbtContainer.appendChild(container__sbt);

					}

				}

				localStorage.setItem('userWalletAddress', userWalletAddress);
				var result = localStorage.getItem('userWalletAddress');

			}

			else {
				window.alert("wallet not connected.")
			}


		};





	    $( "#container__connectWallet" ).hover(
		  function() {
		  	if (connectionText == "Wallet not connected") {
			    $(".text__status").text("Connect Wallet");
			    document.getElementById('container__statusLight').style.background="lightgreen";
		  	} else if (connectionText == "Wallet connected") {
		  		$(".text__status").text("Refresh wallet");
		  	}
		  }, function() {
		    $(".text__status").text(connectionText);
		    document.getElementById('container__statusLight').style.background=statusLight;
		  }
		);


	</script>

</body>






